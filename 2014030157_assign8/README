#README for assignment 7, course HPY414.

In this assignment a buffer overflow exploitation was the main goal.

Folder contains:

  -Greeter.c
  "Contains the "badly" written program in C code that is used to exploit the buffer"

  -inputgen.py
  "Contains the python code used to create the string which is given as argument to the
Greeter program. This string contains the shellcode for opening the new terminal as well as the
memory address that the shellcode is put in."

  -a file
  "created using the command:
$ python2 ./inputgen.py > a
and used as argument to the Greeter program as such:
$ (cat a; cat) | ./Greeter
(as pointed out in the assignment link in step 4)"

  -tester.c
"Contains the C code used for shellcode testing. The code is quite simple as it only creates
a function pointer which then points to the shellcode and is then called"

  -Makefile
  "used for compiling the .c files"


  There was an overwhelming amount of information online about this technique, something that
we are not so used to for the projects of this course.
  In my first try i attempted to implement a similar technique to the Computerphile(Youtube) video on the
subject but after some trial and error i didn't like the idea of a "slide"(lots of \x90) before the shellcode
and after that the return address of somewhere in the "slide".
  So I chose to fill the bytes before the $eip with garbage(its actually \x90 but doesn't really matter), then
pass to $eip the address 4 bytes after the $eip and lastly the shellcode.
  That way seemed more efficient as I didn't want to change the padding each time the shellcode was changed.

- Chalimas Theodoros - 2014030157
	<thodorischa@gmail.com>
